# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}

server {
    listen 80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    charset utf-8;

    # set the correct host(s) for your site
    server_name oha-rmq.balanced-core.ru;

    # Docker DNS
    resolver 127.0.0.11 valid=1s;
    set $web_proxy_pass_url http://rabbitmq:15672;

    ssl_certificate /etc/nginx/ssl/balanced-core/fullchain_cert.pem;
    ssl_certificate_key /etc/nginx/ssl/balanced-core/balanced-core.ru_key.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2;
    ssl_ciphers EECDH+AESGCM:EECDH+AES;
    ssl_ecdh_curve secp384r1;
    ssl_prefer_server_ciphers on;

    ssl_stapling on;
    ssl_stapling_verify on;

    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    # https://www.digitalocean.com/community/tutorials/how-to-implement-browser-caching-with-nginx-s-header-module-on-ubuntu-16-04
    expires $expires;

    # http://nginx.org/en/docs/http/ngx_http_gzip_module.html
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 2;
    gzip_min_length 1000;
    gzip_http_version 1.1;
    gzip_disable "MSIE [1-6].(?!.*SV1)";
    gzip_types text/javascript text/css text/plain application/json application/x-javascript text/xml application/xml application/xml+rss  application/javascript;

    proxy_set_header   Host                 $http_host;
    proxy_set_header   X-Forwarded-Proto    $scheme;
    proxy_set_header   X-Forwarded-For      $remote_addr;
    proxy_redirect     off;

    # keepalive + raven.js is a disaster
    keepalive_timeout 0;

    # use very aggressive timeouts
    proxy_read_timeout 5s;
    proxy_send_timeout 5s;
    send_timeout 5s;
    resolver_timeout 5s;
    client_body_timeout 5s;

    # buffer larger messages
    client_max_body_size 5m;
    client_body_buffer_size 100k;

    location / {
      proxy_pass $web_proxy_pass_url;

      add_header Strict-Transport-Security "max-age=31536000";
    }

    # force https-redirects
    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }
  }
